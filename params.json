{
  "name": "C++ Sanitizers Review Test Suite",
  "tagline": "C++ Sanitizers Valgrind, ASAN, Dr.Memory, etc Review Test Suite",
  "body": "#C++ Sanitizers Review Test Suite\r\n\r\n\r\n##Overview\r\nThis repository contains C++ test code and support scripts developed to easily compare Memory Sanitizer tools like\r\nValgrind, ASAN, Dr.Memory, etc\r\n\r\n\r\n**Review Results**\r\n\r\n@ [To be updated in the wiki](https://github.com/gayanpathirage/SanitizersReviewTestSuite/wiki)\r\n\r\n\r\n##Licence\r\nThe MIT License (MIT)\r\n\r\n\r\n##Branch Model\r\nThis repository is following GitHub Flow branch model\r\nRead more @ [GitHub Flow](https://guides.github.com/introduction/flow/) before you commit changes to this repository.\r\n\r\n\r\n\r\n##Requirements\r\nThe following are required for building this source code.\r\n\r\n* GCC 4.9.3 or above\r\n\r\n\r\n##Building\r\n**Normal Build**\r\n\r\n```\r\n/usr/local/gcc-4.9.3/bin/g++ -o MCTester -O -g -Wall main.cpp\r\n```\r\n\r\n**ASAN Build**\r\n\r\n```\r\n/usr/local/gcc-4.9.3/bin/g++ -o MCTester_ASAN -static-libstdc++ -static-libasan -O -g -fsanitize=address -fno-omit-frame-pointer -Wall main.cpp\r\n```\r\n\r\n##Running\r\ne.g. Run only Test 1;\r\n\r\n**Valgrind**\r\n```\r\n/mnt/ValgrindInstallations/SuSE-11-SP3/valgrind-3.11.0/vg-in-place --tool=memcheck  MCTester 1 1\r\n```\r\n\r\n**ASAN**\r\n```\r\nMCTester_ASAN 1 1\r\n```\r\n\r\n**Dr.Memory**\r\n```\r\n/mnt/DrMemory-Linux-1.10.0-2/bin>./drmemory -light -- MCTester 1 1\r\n```\r\n\r\n##Additional Settings\r\n**Run Time flags of ASAN**\r\n\r\n```\r\nexport ASAN_OPTIONS=detect_leaks=1:verbose=1\r\n```\r\n\r\ndetect_leaks will enable LeakSanitizer (LSAN) with ASAN\r\n\r\n**Options to enable when running Valgrind**\r\n\r\n\r\nwith --keep-stacktraces=none --undef-value-errors=no options to be inline with ASAN features\r\n\r\n**Options to enable when running Dr.Memory**\r\n\r\n\r\n-light : This will not detect uninitialized read and memory leak errors (to be inline with ASAN features)\r\n\r\n-light -count_leaks : This will not detect uninitialized read errors, but lists leak errors.\r\n\r\n##Results\r\n* **Valgrind** : [Gist](https://gist.github.com/gayanpathirage/3731b6493a7b74daa6d5fc59289cc35a)\r\n* **ASAN** : [Gist](https://gist.github.com/gayanpathirage/6a791caf81e39ea8d4926aeeaf71641d)\r\n* **Dr.Memory** : [Gist](https://gist.github.com/gayanpathirage/f4ce60f5a5f50e53b6f0358bd3a834e1)\r\n\r\n##Major features\r\n* Test suite can be run all tests e.g. MCTester_ASAN <No-Args>\r\n* Test suite can run range of tests e.g. MCTester_ASAN 1 - 10\r\n* Test suite can run tests starting from a test MCTester_ASAN 10 - this will execute all 10,11,12,....\r\n* Test suite can run individual test e.g. MCTester_ASAN 1 1 - will execute only Test 1\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}